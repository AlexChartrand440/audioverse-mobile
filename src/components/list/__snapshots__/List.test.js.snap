// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`List component renders activity indicator when no items 1`] = `
<ActivityIndicator
  animating={true}
  color="#03A9F4"
  hidesWhenStopped={true}
  size="large"
  style={
    Object {
      "margin": 50,
    }
  }
/>
`;

exports[`List component renders items correctly 1`] = `
<RCTScrollView
  data={
    Array [
      Object {
        "id": "1",
      },
    ]
  }
  disableVirtualization={false}
  getItem={[Function]}
  getItemCount={[Function]}
  horizontal={false}
  initialNumToRender={10}
  keyExtractor={[Function]}
  maxToRenderPerBatch={10}
  numColumns={1}
  onContentSizeChange={[Function]}
  onEndReached={[Function]}
  onEndReachedThreshold={0.1}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onRefresh={[MockFunction]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  refreshControl={
    <RefreshControlMock
      onRefresh={[MockFunction]}
      refreshing={false}
    />
  }
  refreshing={false}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
  updateCellsBatchingPeriod={50}
  viewabilityConfigCallbackPairs={Array []}
  windowSize={21}
>
  <RCTRefreshControl />
  <View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View>
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#FFFFFF",
                "flexDirection": "row",
                "padding": 10,
              },
              undefined,
            ]
          }
        />
        <View
          style={
            Object {
              "backgroundColor": "#BCBBC1",
              "height": 0.5,
            }
          }
        />
      </View>
    </View>
  </View>
</RCTScrollView>
`;
